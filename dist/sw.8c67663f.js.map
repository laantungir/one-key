{"mappings":"ACIA,MAAM,EAAe,CACnB,IACA,cACA,aACA,WACA,iBACA,iBACD,CAGD,+DAA+D,EAC/D,KAAK,gBAAA,CAAiB,UAAW,SAAS,CAAC,EACzC,EAAE,SAAA,CACA,OAAO,IAAA,CAdO,cAcS,IAAA,CAAK,SAAS,CAAK,EACxC,OAAO,EAAM,MAAA,CAAO,EACtB,IAEF,QAAQ,GAAA,CAAI,2BACd,GAGA,8CAA8C;AAC9C,qBAAqB;AACrB,8CAA8C;AAC9C,MAAM;AACN,KAAK;AAGL,qCAAqC,EACrC,KAAK,gBAAA,CAAiB,QAAS,SAAS,CAAC,EACvC,EAAE,WAAA,CACA,OAAO,KAAA,CAAM,EAAE,OAAA,EAAS,IAAA,CAAK,SAAS,CAAQ,EAC5C,OAAO,GAAY,MAAM,EAAE,OAA3B,CACF,GAEJ,GAEA,KAAK,gBAAA,CAAiB,mBAAoB,WACP,YAA7B,SAAS,eAAA,GACT,QAAQ,GAAA,CAAI,eACZ,OAAO,QAAA,CAAS,MAAhB,GAEN,GAIA,KAAK,gBAAA,CAAiB,WAAY,AAAA,IAEhC,QAAQ,GAAA,CAAI,2BAEZ,6BAA4B;AAC5B,mEAAmE;AACnE,aAAa;AAEf,E,yD","sources":["<anon>","src/sw.mjs"],"sourcesContent":["var $c4e52b9b38f9162d$exports = {};\nconst $c4e52b9b38f9162d$var$cacheName = `HelloCache`;\nconst $c4e52b9b38f9162d$var$filesToCache = [\n    \"/\",\n    \"/index.html\",\n    \"/style.css\",\n    \"/main.js\",\n    \"/music/nin.mp3\",\n    \"/manifest.json\"\n];\n/* Start the service worker and cache all of the app's content */ self.addEventListener(\"install\", function(e) {\n    e.waitUntil(caches.open($c4e52b9b38f9162d$var$cacheName).then(function(cache) {\n        return cache.addAll($c4e52b9b38f9162d$var$filesToCache);\n    }));\n    console.log(\"Service worker installed\");\n});\n// self.addEventListener('install', event => {\n//   event.waitUntil(\n//     console.log(\"Service worker installed\")\n//   )\n// })\n/* Serve cached content when offline */ self.addEventListener(\"fetch\", function(e) {\n    e.respondWith(caches.match(e.request).then(function(response) {\n        return response || fetch(e.request);\n    }));\n});\nself.addEventListener(\"visibilitychange\", function() {\n    if (document.visibilityState === \"visible\") {\n        console.log(\"APP resumed\");\n        window.location.reload();\n    }\n});\nself.addEventListener(\"activate\", (event)=>{\n    console.log(\"Service worker activated\");\n// setInterval(async () => {\n//   console.log(`Service Worker ${Math.floor(Date.now() / 1000)}`)\n//   }, 2000)\n});\n\n\n//# sourceMappingURL=sw.8c67663f.js.map\n","\n\n\nconst cacheName = `HelloCache`\nconst filesToCache = [\n  '/',\n  '/index.html',\n  '/style.css',\n  '/main.js',\n  '/music/nin.mp3',\n  '/manifest.json'\n]\n\n\n/* Start the service worker and cache all of the app's content */\nself.addEventListener('install', function(e) {\n  e.waitUntil(\n    caches.open(cacheName).then(function(cache) {\n      return cache.addAll(filesToCache);\n    })\n  );\n  console.log(\"Service worker installed\");\n})\n\n\n// self.addEventListener('install', event => {\n//   event.waitUntil(\n//     console.log(\"Service worker installed\")\n//   )\n// })\n\n\n/* Serve cached content when offline */\nself.addEventListener('fetch', function(e) {\n  e.respondWith(\n    caches.match(e.request).then(function(response) {\n      return response || fetch(e.request);\n    })\n  )\n})\n\nself.addEventListener('visibilitychange', function() {\n  if (document.visibilityState === 'visible') {\n      console.log('APP resumed');\n      window.location.reload();\n  }\n});\n\n\n\nself.addEventListener('activate', event => {\n\n  console.log(\"Service worker activated\")\n\n  // setInterval(async () => {\n  //   console.log(`Service Worker ${Math.floor(Date.now() / 1000)}`)\n  //   }, 2000)\n\n})"],"names":["$c4e52b9b38f9162d$var$filesToCache","self","addEventListener","e","waitUntil","caches","open","then","cache","addAll","console","log","respondWith","match","request","response","fetch","document","visibilityState","window","location","reload","event"],"version":3,"file":"sw.8c67663f.js.map"}